package eu.musesproject.windowsclient.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import eu.musesproject.windowsclient.actuators.ActuatorController;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class SimpleFeedbackDialog extends JDialog {
    private JPanel contentPane;
    private JButton buttonDetails;
    private JButton buttonCancel;
    private JTextArea dialogBodyView;
    private JLabel dialogTitleView;
    private String[] splitBody;
    private String decisionId;
    private String body;

    public SimpleFeedbackDialog(String title, String body, String decisionId) {
        System.out.println("SimpleFeedbackDialog(String title, String body, String decisionId)");
        this.decisionId = decisionId;
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonDetails);
        this.setLocationRelativeTo(null);
        this.setLocation((int) (getLocation().getX() - (100)), (int) (getLocation().getY() - (100)));
        dialogBodyView.setLineWrap(true);
        this.setSize(300, 200);

        buttonDetails.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onDetails();
            }
        });
        buttonCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        });
        dialogBodyView.setEditable(false);
        dialogBodyView.setBackground(dialogTitleView.getBackground());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        this.body = body;
        fillWithContent(title, body);
    }

    private void fillWithContent(String title, String body) {
        dialogTitleView.setText(title);

        // split the text for the main and the details view
        try {
            splitBody = body.split("\\n");
        } catch (NullPointerException e) {
            splitBody = new String[2];
            splitBody[0] = body;
            splitBody[1] = body;
        }

        dialogBodyView.setText(splitBody[0]);
    }

    private void onDetails() {
        try {
            dialogBodyView.setText(splitBody[1]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("No details found. show the main text");
            if(body != null && !body.isEmpty()) {
                dialogBodyView.setText(body);
            }
            else {
                dialogBodyView.setText(splitBody[0]);
            }
        }
        dialogBodyView.setLineWrap(true);
        buttonDetails.hide();
    }

    private void onCancel() {
        ActuatorController.getInstance().removeFeedbackFromQueue();
//        UserContextMonitoringController.getInstance().sendUserBehavior(action, decisionId);
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(4, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonDetails = new JButton();
        buttonDetails.setText("Details");
        panel2.add(buttonDetails, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonCancel = new JButton();
        buttonCancel.setText("Cancel");
        panel2.add(buttonCancel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        contentPane.add(separator1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        dialogTitleView = new JLabel();
        dialogTitleView.setFont(new Font(dialogTitleView.getFont().getName(), Font.BOLD, dialogTitleView.getFont().getSize()));
        dialogTitleView.setText("Label");
        contentPane.add(dialogTitleView, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dialogBodyView = new JTextArea();
        contentPane.add(dialogBodyView, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
